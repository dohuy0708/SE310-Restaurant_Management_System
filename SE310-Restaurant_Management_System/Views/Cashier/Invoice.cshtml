@* @model IPagedList<SE310_Restaurant_Management_System.Models.Invoice> *@
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<Invoice>

@{
    var isPaid = ViewData["IsPaid"] as bool?;
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="btn-group mb-3" role="group" aria-label="Chọn loại hóa đơn">
    <button type="button" class="btn btn-secondary @(isPaid == null ? "btn-danger" : "")" onclick="filterInvoices(null, this)">Tất cả</button>
    <button type="button" class="btn btn-secondary @(isPaid == true ? "btn-danger" : "")" onclick="filterInvoices(true, this)">Đã thanh toán</button>
    <button type="button" class="btn btn-secondary @(isPaid == false ? "btn-danger" : "")" onclick="filterInvoices(false, this)">Chưa thanh toán</button>
</div>


<div id="invoicesContainer">
    @await Html.PartialAsync("_InvoicesPartial", Model)
</div>




<div class="modal fade" id="invoiceDetailsModal" tabindex="-1" aria-labelledby="invoiceDetailsLabel" aria-hidden="true">
    <div class="modal-dialog " style="max-width:600px">
        <div class="modal-content" >
            <div class="modal-header" style="padding: 0.5rem 1rem;">
                <h3 class="modal-title" id="invoiceDetailsLabel">Chi tiết hóa đơn</h3>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close" style="border: none; font-size: 26px; line-height: 0;">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="invoiceDetailsContent">
                <!-- Nội dung chi tiết hóa đơn sẽ được nạp ở đây -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button id="payButton" type="button" class="btn btn-primary" onclick="executePayment()" style="display: none;">Thanh toán</button>
                <button id="printInvoiceButton" class="btn btn-primary" onclick="downloadInvoice()" style="display: none;">In hóa đơn</button>
            </div>
        </div>
    </div>
</div>



<script>
    function downloadInvoice(){
        const invoiceContent = document.getElementById('invoiceDetailsContent').innerHTML;

        const printWindow = window.open('', '_blank');
        if (printWindow) {
            printWindow.document.body.innerHTML = `
            <html>
                <head>
                    <title>Hoshi Restaurant</title>
                    <style>
                        body {
                            font-family: Arial, sans-serif;
                            width: 600px; 
                            margin: 0 auto; 
                        }
                        h1 {
                            text-align: center;
                        }
                        table {
                            width: 100%;
                            border-collapse: collapse;
                        }
                        table, th, td {
                            border: 1px solid black;
                        }
                        th, td {
                            padding: 8px;
                            text-align: center;
                        }
                    </style>
                </head>
                <body>
                    <h1>Hóa đơn</h1>
        `;
            printWindow.document.body.innerHTML += invoiceContent;
            printWindow.document.close();
            printWindow.print();
            
        } else {
            alert('Pop-up bị chặn! Hãy kiểm tra cài đặt trình duyệt.');
        }

    }


    function filterInvoices(isPaid, button) {
        // Lưu lại trạng thái lựa chọn
        document.querySelectorAll('.btn-group button').forEach(btn => btn.classList.remove('btn-danger'));
        button.classList.add('btn-danger');

        // Lưu lại trạng thái isPaid trong ViewData để gửi cùng trong phân trang
        var currentIsPaid = isPaid;

        // Gửi yêu cầu AJAX để lọc hóa đơn
        $.ajax({
            url: '@Url.Action("Invoice", "Cashier")',
            type: 'GET',
            data: { isPaid: currentIsPaid, page: 1 },  // Reset page to 1 khi lọc
            success: function (result) {
                // Cập nhật danh sách hóa đơn
                $('#invoicesContainer').html(result);  // Cập nhật danh sách hóa đơn
            },
            error: function () {
                alert("Có lỗi xảy ra khi tải danh sách hóa đơn.");
            }
        });
    }

    // Cập nhật hàm để gửi tham số trang và isPaid khi phân trang
    $(document).on('click', '.pagination-container a', function (e) {
        e.preventDefault();  // Ngăn chặn hành động mặc định của phân trang

        var page = $(this).attr('data-page');  // Lấy trang từ thuộc tính data-page
        var isPaid = $('.btn-danger').attr('data-isPaid');  // Lấy trạng thái isPaid từ nút hiện tại

        // Gửi yêu cầu AJAX để lấy dữ liệu trang mới với trạng thái lọc
        $.ajax({
            url: '@Url.Action("Invoice", "Cashier")',
            type: 'GET',
            data: { page: page, isPaid: isPaid },  // Truyền lại cả trang và trạng thái isPaid
            success: function (result) {
                // Cập nhật lại danh sách hóa đơn và phân trang
                $('#invoicesContainer').html(result);
            },
            error: function () {
                alert("Có lỗi xảy ra khi tải danh sách hóa đơn.");
            }
        });
    });


    

    // Hàm xử lý sự kiện OnClick cho nút Thanh toán
    function confirmPayment(invoiceId) {
        $.ajax({
            url: '@Url.Action("GetInvoiceDetails", "Cashier")', // Action để lấy chi tiết hóa đơn
            type: 'GET',
            data: { id: invoiceId },
            success: function (data) {
                // Hiển thị chi tiết hóa đơn trong modal
                $('#invoiceDetailsContent').html(data);
                $('#invoiceDetailsModal').data('invoice-id', invoiceId);
                // Hiển thị modal
                $('#invoiceDetailsModal').modal('show');
            },
            error: function () {
                alert("Đã xảy ra lỗi khi tải chi tiết hóa đơn.");
            }
        });
    }


   
    // Hàm xử lý sự kiện OnClick cho nút Xem chi tiết
    function showInvoiceDetails(invoiceId) {
        $.ajax({
            url: '@Url.Action("GetInvoiceDetails", "Cashier")',
            type: 'GET',
            data: { id: invoiceId },
            success: function (data) {
                $('#invoiceDetailsContent').html(data);
                $('#invoiceDetailsModal').modal('show');
            },
            error: function () {
                alert("Có lỗi xảy ra khi tải chi tiết hóa đơn.");
            }
        });
    }
    function executePayment() {
        const invoiceId = $('#invoiceDetailsModal').data('invoice-id');

        $.ajax({
            url: '@Url.Action("ConfirmPayment", "Cashier")',
            type: 'POST',
            data: { id: invoiceId },
            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Thanh toán thành công!',
                        text: '',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        $('#invoiceDetailsModal').modal('hide');
                        location.reload(); // Tải lại trang để cập nhật trạng thái
                    });
                   
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Có lỗi xảy ra: ' + response.message,
                    });
                }
            },
            error: function () {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: 'Đã xảy ra lỗi khi xử lý yêu cầu thanh toán.',
                });
            }
        });
    }

</script>
