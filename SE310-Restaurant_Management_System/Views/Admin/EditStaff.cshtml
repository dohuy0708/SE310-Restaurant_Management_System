
@{
    ViewData["Title"] = "EditStaff";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h1>Sửa thông tin nhân viên</h1>

<div class="card-body">
    <form id="editStaffForm" method="post">
        <div class="form-group row">
            <label for="Username" class="col-sm-3 col-form-label">Tên nhân viên:</label>
            <div class="col-sm-9">
                <input type="text" id="Username" name="Username" class="form-control" placeholder="Tên nhân viên" value="@Model.Username">
                <span class="text-danger" id="UsernameError"></span>
            </div>
        </div>
        <div class="form-group row">
            <label for="Email" class="col-sm-3 col-form-label">Email:</label>
            <div class="col-sm-9">
                <input type="email" id="Email" name="Email" class="form-control" placeholder="Email" value="@Model.Email">
                <span class="text-danger" id="EmailError"></span>
            </div>
        </div>
        <div class="form-group row">
            <label for="Password" class="col-sm-3 col-form-label">Password:</label>
            <div class="col-sm-9">
                <input type="text" id="Password" name="Password" class="form-control" placeholder="Password" value="@Model.Password">
                <span class="text-danger" id="PasswordError"></span>
            </div>
        </div>
        <div class="form-group row">
            <label for="RoleId" class="col-sm-3 col-form-label">Vai trò:</label>
            <div class="col-sm-9">
                <select id="RoleId" name="RoleId" class="form-control">
                     <option value="">Chọn vai trò</option>
                      <option value="2"  >Cashier</option>
                    <option value="3" >Staff</option>
                  
                </select>
            </div>
        </div>
        <div class="form-group row">
            <label for="DateOfBirth" class="col-sm-3 col-form-label">Ngày sinh:</label>
            <div class="col-sm-9">
                <input type="date" id="DateOfBirth" name="DateOfBirth" class="form-control" value="@Model.DateOfBirth.ToString("yyyy-MM-dd")">
            </div>
        </div>
        <div class="form-group row">
            <label for="PhoneNumber" class="col-sm-3 col-form-label">Số điện thoại:</label>
            <div class="col-sm-9">
                <input type="text" id="PhoneNumber" name="PhoneNumber" class="form-control" placeholder="Số điện thoại" value="@Model.PhoneNumber">
            </div>
        </div>
        <div class="d-flex justify-content-between">
            <button type="submit" class="btn btn-success">Cập nhật nhân viên</button>
            <button type="button" class="btn btn-secondary" onclick="window.location.href='/admin/Staff'">Hủy</button>
        </div>
    </form>
</div>



<script>
   
        // Chọn giá trị mặc định từ model nếu có
        var roleId = @Model.RoleId; // Lấy giá trị RoleId từ model (nếu có)
        document.getElementById("RoleId").value = roleId;
 
    document.getElementById("editStaffForm").addEventListener("submit", function (event) {
        event.preventDefault();

        // Get form data
        const username = document.getElementById("Username").value;
        const password = document.getElementById("Password").value;
        const roleId = parseInt(document.getElementById("RoleId").value);
        const email = document.getElementById("Email").value;
        const dateOfBirth = document.getElementById("DateOfBirth").value;
        const phoneNumber = document.getElementById("PhoneNumber").value;

        let isValid = true;

        // Clear previous error messages
        document.getElementById("UsernameError").textContent = "";
        document.getElementById("EmailError").textContent = "";
        document.getElementById("PasswordError").textContent = "";

        if (!phoneNumber || !/^\d{10}$/.test(phoneNumber)) {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi',
                text: "Số điện thoại không hợp lệ."
            });
            isValid = false;
        }
        if (isNaN(Date.parse(dateOfBirth))) {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi',
                text: "Vui lòng nhập ngày sinh hợp lệ."
            });
            isValid = false;
        }

        if (!roleId) {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi',
                text: "Vui lòng chọn vai trò."
            });
            isValid = false;
        }

        if (!password || password.length < 8) {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi',
                text: "Vui lòng nhập mật khẩu đúng định dạng"
            });

            document.getElementById("PasswordError").textContent = "*Mật khẩu phải có ít nhất 8 ký tự.";
            isValid = false;
        }

        if (!email) {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi',
                text: "Vui lòng nhập Email"
            });
            document.getElementById("EmailError").textContent = "*Email không hợp lệ.";
            isValid = false;
        }

        if (!username) {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi',
                text: "Vui lòng nhập tên nhân viên."
            });
            isValid = false;
        }

        // If validation fails, prevent form submission
        if (!isValid) return;

        // Prepare data for submission
        const data = {
            UserId: @Model.UserId, // Thêm UserId từ Model
            Username: username,
            Password: password,
            RoleId: roleId,
            Email: email,
            DateOfBirth: dateOfBirth,
            PhoneNumber: phoneNumber
        };
        fetch(`/Admin/EditStaff/${@Model.UserId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        })
            .then(response => {
                if (response.ok) {
                    return response.json();  // Parse JSON if the response is ok
                }
                throw new Error(`HTTP error! status: ${response.status}`);
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Thành công',
                        text: data.message,
                    }).then(() => {
                        window.location.href = '@Url.Action("Staff", "Admin")'; // Redirect to Staff page
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Thất bại',
                        text: data.message,
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: error.message,
                });
            });

    });
</script>