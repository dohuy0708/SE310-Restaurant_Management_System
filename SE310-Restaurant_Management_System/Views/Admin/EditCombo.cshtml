@{
    ViewData["Title"] = "EditCombo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using SE310_Restaurant_Management_System.ViewModels
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model ComboViewModel

<h1>Sửa combo</h1>

<head>
    <link rel="stylesheet" href="~/assets/css/combo.css" />
</head>
<form id="editComboForm" method="post" asp-action="EditCombo" asp-controller="Admin" enctype="multipart/form-data">
<div class="container">
        <div class="left-panel">
            <h2>Ảnh Combo</h2>

            <div class="image-preview">
                <img src="~/assets/images/combos/@ViewData["ComboImage"]" alt="Ảnh Combo" id="preview">
            </div>
            <label asp-for="ImagePath">Hình ảnh</label>
            <div class="">
                <input asp-for="ImagePath" class="file-upload-info" id="customFile" onchange="changeImage(event)" />
                <span asp-validation-for="ImagePath" class="text-danger"></span>
            </div>
        </div>

        <div class="right-panel">
            <div class="form-group">
                <label for="menu-name">Tên Combo (*)</label>
                <input type="text" id="menu-name" name="ComboName" value="@Model.ComboName" placeholder="Nhập tên Combo" required>
            </div>

            <div class="form-group">
                <label>Giá bán combo (*)</label>
                <input type="number" name="ComboPrice" value="@Model.ComboPrice" placeholder="VD: 1.000.000 đ" required>
            </div>

            <div class="form-group">
                <label>Giá gốc</label>
                <input type="number" id="original-price" name="OriginalPrice" disabled>
            </div>

            <h3>Danh sách món ăn trong combo</h3>

            <button type="button" id="addMenuItemBtn" class="add-item-btn">Thêm món ăn</button>

            <table class="item-table">
                <thead>
                    <tr>
                        <th style="width: 50%">Tên món ăn</th>
                        <th style="width: 20%">Giá bán</th>
                        <th style="width: 10%"></th>
                    </tr>
                </thead>
                <tbody id="selectedItemsBody">
                    @foreach (var menuItemId in Model.SelectedMenuItems)
                    {
                        // Các món ăn đã chọn sẽ hiển thị ở đây
                    }

                    @if (ViewBag.AllMenuItems != null)
                    {
                        var selectedMenuItems = ((List<MenuItem>)ViewBag.AllMenuItems)
                        .Where(m => Model.SelectedMenuItems != null &&
                        Model.SelectedMenuItems.Contains(m.MenuItemId))
                        .ToList();

                        foreach (var menuItem in selectedMenuItems)
                        {
                            <tr>
                                <td>@menuItem.Name</td>
                                <td>@menuItem.Price.ToString("N0") đ</td>
                                <td>
                                    <button type="button" class="btn btn-danger btn-sm remove-item-btn">Xóa</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            <input type="hidden" asp-for="SelectedMenuItems" id="selectedItemsInput"
                   value="@string.Join(",", Model.SelectedMenuItems)" />

            <button  class="save-btn" onclick=saveCombo() >Lưu lại</button>
            <button type="button" class="back-btn" onclick="history.back()">Quay lại</button>
        </div>
</div>
    </form>

<!-- Modal -->
<div id="menuItemsPopup" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="menuItemsPopupLabel" aria-hidden="true">
    <div class="modal-dialog modal-custom" role="document">
        <div class="modal-content">
            <style>
                .modal-custom {
                    max-width: 40%;
                    width: auto;
                }

                .menu-item {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    margin-bottom: 10px;
                }

                .menu-list {
                    flex: 3; /* Phần trái chiếm 1 phần */
                    margin-right: 20px; /* Khoảng cách giữa hai cột */
                }

                .order-list {
                    flex: 2; /* Phần phải chiếm 1 phần */
                    border-left: 1px solid #ccc; /* Đường viền giữa hai phần */
                    padding-left: 20px; /* Khoảng cách bên trái của danh sách đã gọi */
                }
            </style>
            <div class="modal-header pb-0" style="align-items: flex-start;">
                <div>
                    <h5 class="modal-title mb-3" id="menuItemsPopupLabel">Chọn món ăn</h5>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border: none; font-size: 26px;">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body pt-0" style="max-height:500px; display: flex; overflow-y: auto;">
                <div class="menu-list" id="menuItemsContent">
                    <!-- Nội dung món ăn sẽ được tải vào đây -->
                </div>
                @*    <div class="order-list">
                <h6>Các món đã chọn:</h6>
                <ul id="orderedItemsList">
                <!-- Các món đã chọn sẽ được thêm vào đây -->
                </ul>
                </div> *@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveSelectedMenuItems">Lưu</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function changeImage(event) {
        var file = event.target.files[0];

        if (file && file.type.startsWith('image/')) {
            var reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById('preview').src = e.target.result;
            };
            reader.readAsDataURL(file);
        } else {
            alert('Vui lòng chọn một tệp ảnh.');
        }
    }
    function saveCombo() {
        // Lấy danh sách ID món ăn đã chọn
        let selectedItems = [];
        $("#selectedItemsBody tr").each(function () {
            let menuItemId = $(this).find("td").first().data("id");
            if (menuItemId) {
                selectedItems.push(menuItemId);
            }
        });

        // Cập nhật hidden input
        $("#selectedItemsInput").val(JSON.stringify(selectedItems));

        // Submit form
        $("#editComboForm").submit();
    }
    $(document).ready(function () {
        // Xử lý thêm và xóa món ăn 
        $("#addMenuItemBtn").on("click", function () {
            $.ajax({
                url: '/Admin/GetMenuItems',
                type: 'GET',
                success: function (data) {
                    $("#menuItemsContent").html(data); 
                    $("#menuItemsPopup").modal("show"); 
                },
                error: function () {
                    alert("Không thể tải danh sách món ăn.");
                }
            });
        });

        // Lưu các món ăn đã chọn
        $("#saveSelectedMenuItems").on("click", function () {
            let selectedItems = [];
            let totalPrice = 0;
            $(".menu-item-checkbox:checked").each(function () {
                selectedItems.push($(this).data("id"));

                let price = $(this).data("price");

                if (!isNaN(price)) {
                    totalPrice += parseFloat(price);
                } else {
                    console.warn("Invalid price value:", price);
                }
            });

            console.log("Total Price: ", totalPrice);

            // Gửi danh sách món ăn đã chọn qua Ajax
            $.ajax({
                url: '/Admin/GetSelectedMenuItems',
                type: 'POST',
                data: { selectedItemIds: selectedItems },
                traditional: true,
                success: function (data) {
                    $("table.item-table tbody").html(data); // Cập nhật bảng
                    $("#menuItemsPopup").modal("hide");    // Đóng popup
                },
                error: function () {
                    alert("Không thể hiển thị món ăn đã chọn.");
                }
            });

            // Lưu danh sách món ăn đã chọn vào input hidden
            $("#selectedItemsInput").val(JSON.stringify(selectedItems));

            // Cập nhật giá tổng cộng
            $("#original-price").val(totalPrice);
        });


        $(document).on("input", function () {
            let totalPrice = 0;
            $("table.item-table tbody tr").each(function () {
                let price = $(this).find("td:eq(1)").text(); 
                totalPrice += parseFloat(price); 
            });

            console.log("Total Price: ", totalPrice);

            $("#original-price").val(totalPrice);
        });
        $(".btn-secondary, .close").on("click", function () {
            $("#menuItemsPopup").modal("hide");
        });

        $(document).on("click", ".remove-item-btn", function () {
            $(this).closest("tr").remove(); 
        });
    });
</script>
